// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserRoleManagementApi.Models;

#nullable disable

namespace UserRoleManagementApi.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20241025070721_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("mst_roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreatedBy = "Super Admin",
                            CreatedDate = new DateTime(2024, 10, 25, 7, 7, 20, 495, DateTimeKind.Utc).AddTicks(3272),
                            IsActive = true,
                            RoleName = "Super Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            CreatedBy = "Super Admin",
                            CreatedDate = new DateTime(2024, 10, 25, 7, 7, 20, 495, DateTimeKind.Utc).AddTicks(3275),
                            IsActive = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 3,
                            CreatedBy = "Super Admin",
                            CreatedDate = new DateTime(2024, 10, 25, 7, 7, 20, 495, DateTimeKind.Utc).AddTicks(3277),
                            IsActive = true,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("mst_users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedBy = "Super Admin",
                            CreatedDate = new DateTime(2024, 10, 25, 7, 7, 20, 495, DateTimeKind.Utc).AddTicks(3418),
                            Email = "superadmin@example.com",
                            IsActive = true,
                            MobileNumber = "1234567890",
                            Password = "d3535b78e24867f3c850fec1c8591b7a469b8f8683be64d835057cb9fd204aa1",
                            RoleID = 1,
                            UserName = "superadmin"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
